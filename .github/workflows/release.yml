name: Build AppImage
on:
  workflow_dispatch:
  schedule:
    - cron: "5 */12 * * *"
  push:
    branches:
      - "main"

jobs:
  version:
    name: Zed AppImage
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up directories and version file
        id: get_zed_version
        run: |
          mkdir -p AppDir/usr/bin

          # Fetch the latest release information using the GitHub API
          LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/zed-industries/zed/releases/latest)

          # Extract the version tag
          VERSION=$(echo $LATEST_RELEASE | jq -r '.version')

          # Create the version.json file directly in AppDir/usr/bin
          echo "{\"version\": \"$VERSION\"}" > AppDir/usr/bin/version.json
          echo "Created version.json with content:"
          cat AppDir/usr/bin/version.json
      - name: Build
        id: build
        uses: lavilao/appimage-bash@main
        with:
          version_url: "https://github.com/zed-industries/zed/releases/latest/download/zed-linux-x86_64.tar.gz"
          version_file: "version.json"
          version_icon: "zed.png"
      - name: Upload artifact
        if: ${{ env.APP_UPDATE_NEEDED == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_SHORT_NAME }}.AppImage
          path: "dist"
      - name: Release
        if: ${{ env.APP_UPDATE_NEEDED == 'true' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: ${{ env.APP_NAME }} AppImage ${{ env.APP_VERSION }}
          automatic_release_tag: latest
          prerelease: false
          files: |
            dist/
          repo_token: ${{ secrets.GITHUB_TOKEN }}
