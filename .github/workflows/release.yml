name: Mirror Zed Pre-releases
on:
  workflow_dispatch:
  schedule:
    - cron: "5 */12 * * *"

jobs:
  mirror-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Zed Pre-release
        id: zed-release
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/zed-industries/zed/releases)
          
          tag_name=$(echo "$response" | jq -r '[.[] | select(.prerelease)][0].tag_name')
          version=$(echo "$tag_name" | sed 's/^v//')
          
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "download_url=https://github.com/zed-industries/zed/releases/download/$tag_name/zed-linux-x86_64.tar.gz" >> $GITHUB_OUTPUT

      - name: Download and Extract Zed
        run: |
          mkdir -p zed-build
          cd zed-build
          curl -L "${{ steps.zed-release.outputs.download_url }}" -o zed.tar.gz
          tar -xzf zed.tar.gz
          mv zed-preview.app zed.app

      - name: Set up AppImage Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/bin
          cp -r zed-build/zed.app/* AppDir/usr/bin/
          cp zed.png AppDir/zed.png
          
          cat > AppDir/zed.desktop <<EOF
          [Desktop Entry]
          Name=Zed
          Exec=zed
          Icon=zed
          Type=Application
          Categories=Development;TextEditor;
          EOF

      - name: Build AppImage
        run: |
          ./appimagetool-x86_64.AppImage AppDir Zed-${{ steps.zed-release.outputs.version }}.AppImage
          mkdir -p dist
          mv Zed-*.AppImage dist/
          mv Zed-*.AppImage.zsync dist/

      - name: Verify Artifacts
        run: |
          ls -la dist/
          [ -f dist/Zed-*.AppImage ] || exit 1
          [ -f dist/Zed-*.AppImage.zsync ] || exit 1

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.zed-release.outputs.version }}"
          name: "Zed ${{ steps.zed-release.outputs.version }}"
          body: "Mirror of Zed pre-release ${{ steps.zed-release.outputs.tag_name }}"
          files: |
            dist/Zed-*.AppImage
            dist/Zed-*.AppImage.zsync
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
