name: Mirror Zed Pre-releases
on:
  workflow_dispatch:
  schedule:
    - cron: "5 */12 * * *"

jobs:
  mirror-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Zed Pre-release
        id: zed-release
        run: |
          # Get all Zed releases and find the first pre-release
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/zed-industries/zed/releases)
          
          tag_name=$(echo "$response" | jq -r '[.[] | select(.prerelease)][0].tag_name')
          version=$(echo "$tag_name" | sed 's/^v//')
          
          # Output for subsequent steps
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "download_url=https://github.com/zed-industries/zed/releases/download/$tag_name/zed-linux-x86_64.tar.gz" >> $GITHUB_OUTPUT

      - name: Setup AppImage Environment
        run: |
          mkdir -p AppDir/usr/bin
          echo "{\"version\": \"${{ steps.zed-release.outputs.version }}\"}" > AppDir/usr/bin/version.json

      - name: Build AppImage
        uses: lavilao/appimage-bash@main
        with:
          version_url: "${{ steps.zed-release.outputs.download_url }}"
          version_file: "version.json"
          version_icon: "zed.png"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.zed-release.outputs.version }}"
          name: "Zed ${{ steps.zed-release.outputs.version }}"
          body: "Mirror of Zed pre-release ${{ steps.zed-release.outputs.tag_name }}"
          files: |
            dist/*.AppImage
            dist/*.zsync
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
